{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["styleHeader","backgroundColor","minHeight","display","flexDirection","alignItems","justifyContent","fontSize","color","container","width","margin","card","listStyle","padding","background","columnCount","Student","props","student","name","phone","age","username","email","website","className","style","target","rel","href","Loading","App","useState","appName","setAppName","students","setStudents","isLoading","setIsLoading","useEffect","fetch","then","res","json","catch","err","message","Fragment","onClick","length","map","st","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAKMA,EAAc,CAClBC,gBAAiB,UACjBC,UAAW,OACXC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,SAAU,qBACVC,MAAO,SAEHC,EAAY,CAAEC,MAAO,MAAOC,OAAQ,QACpCC,EAAO,CACXC,UAAW,OACXC,QAAS,YACTC,WAAY,UACZJ,OAAQ,MACRK,YAAa,KAsCf,SAASC,EAAQC,GAAQ,IAAD,EACwBA,EAAMC,QAA/CC,EADiB,EACjBA,KAAKC,EADY,EACZA,MAAMC,EADM,EACNA,IAAIC,EADE,EACFA,SAASC,EADP,EACOA,MAAMC,EADb,EACaA,QACnC,OAAO,sBAAKC,UAAU,OAAOC,MAAOf,EAA7B,UACG,sBAAKc,UAAU,OAAf,UACI,+BAAKN,EAAL,IAAW,sBAAKO,MAAO,CAACnB,MAAM,OAAOD,SAAS,UAAnC,eAAiDgB,EAAjD,WACVC,GAAS,4CAAeA,EAAf,UAEd,sBAAKE,UAAU,QAAf,UACIL,GAAS,yCAAYA,KACrBI,GAAW,2CAAa,mBAAGG,OAAO,SAASC,IAAI,aAAcC,KAAI,iBAAYL,GAArD,SAAiEA,IAA9E,OACXH,GAAO,uCAAUA,WAKjC,SAASS,IACP,OAAO,sBAAKL,UAAU,UAAUC,MAAOlB,EAAhC,cAA4C,mDAGtCuB,MArDf,WAAgB,IAAD,EACgBC,mBAAS,wBADzB,mBACNC,EADM,KACEC,EADF,OAEkBF,mBAAS,IAF3B,mBAENG,EAFM,KAEGC,EAFH,OAGoBJ,oBAAS,GAH7B,mBAGNK,EAHM,KAGIC,EAHJ,KAmBb,OAdAC,qBAAU,WACRD,GAAa,GACbE,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAN,GACJG,GAAa,GACbF,EAAYD,MAEbS,OAAM,SAAAC,GACLP,GAAa,GACbJ,EAAWW,EAAIC,cAEhB,IAGF,cAAC,IAAMC,SAAP,UACIV,EAAY,cAACP,EAAD,IAAe,gCAC5B,yBAAQJ,MAAO3B,EAAf,UACGkC,EACD,qCAAO,wBAAQR,UAAU,kBAAkBuB,QAAU,kBAAMd,EAAW,sBAA/D,2BAAP,UAEDC,EAASc,QAAW,yBAASvB,MAAK,aAAGxB,QAAQ,QAAUM,GAAnC,SAClB2B,EAASe,KAAI,SAAAC,GAAE,OAAI,cAACnC,EAAD,CAASE,QAASiC,GAASA,EAAGC,eCxC3CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e8e23586.chunk.js","sourcesContent":["\nimport './styles/card.css';\nimport React,{useState,useEffect} from 'react'\n\n\nconst styleHeader = {\n  backgroundColor: '#282c34',\n  minHeight: \"10vh\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  fontSize: \"calc(10px + 2vmin)\",\n  color: \"white\"\n}\nconst container = { width: \"90%\", margin: \"auto\" }\nconst card = {\n  listStyle: \"none\",\n  padding: \"10px 15px\",\n  background: \"#f0f0f0\",\n  margin: \"1px\",\n  columnCount: \"2\"\n}\n\n\nfunction App() {\n  const [appName,setAppName] = useState(\"My React Application\");\n  const [students,setStudents] = useState([]);\n  const [isLoading,setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n    .then(res => res.json())\n    .then(students => {\n      setIsLoading(false);\n      setStudents(students);\n    })\n    .catch(err => {\n      setIsLoading(false);\n      setAppName(err.message);\n    })\n  }, [])\n  \n  return (\n   <React.Fragment>\n     { isLoading ? <Loading />  : <div >\n      <header style={styleHeader}>\n        {appName} \n        <span> <button className=\"btn btn-success\" onClick={ () => setAppName(\"React Application\") }> Change Name </button> </span>\n      </header>\n     { students.length &&  <section style={{display:'grid',...container}}  >\n        {students.map(st => <Student student={st} key={st.id} />)}\n      </section> }\n    </div>}\n   </React.Fragment>\n  );\n}\n\nfunction Student(props) {\n  let {name,phone,age,username,email,website} = props.student;\n  return <div className=\"card\" style={card}>\n            <div className=\"left\">\n                <h2>{name} <sup style={{color:'#000',fontSize:'0.8rem'}}> [{username}] </sup></h2>\n                {email && <h4> Email :  {email} </h4>}\n            </div>\n            <div className=\"right\">\n              { phone && <p>Phone : {phone}</p>}\n              { website && <p>website : <a target=\"_blank\" rel=\"noreferrer\"  href={`http://${website}`}>{website}</a> </p>}\n              { age && <p>Age : {age}</p>}\n            </div>\n        </div>\n      }\n\nfunction Loading(){\n  return <div className=\"loading\" style={container}> <h2>Loading.......</h2></div>\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}